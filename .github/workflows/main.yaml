name: GameList-Converter-Publisher

on:
  pull_request:
    branches:
      - main
  release:
    types: [created]

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  getVersion:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.create-environment-variables.outputs.version }}
    steps:
      - uses: actions/checkout@v4

      - name: Generate env vars
        id: create-environment-variables
        run: |
          echo "version=$(${{github.workspace}}/gradlew -q getVersionName)" >> $GITHUB_OUTPUT

  build:
    env:
      VersionNumber: ${{ needs.getVersion.outputs.version }}
    strategy:
      matrix:
        platform: [windows, linux, macos]
        include:
          - platform: windows
            runsOn: windows-latest
            zipCommand: 'Compress-Archive -Path composeApp\build\compose\binaries\main-release\app\GameListConverter -DestinationPath .\GameListConverter-Windows.zip'
            archiveName: GameListConverter-Windows.zip
          - platform: linux
            runsOn: ubuntu-latest
            zipCommand: 'tar -czf GameListConverter-Linux.tar.gz -C composeApp/build/compose/binaries/main-release/app .'
            archiveName: GameListConverter-Linux.tar.gz
          - platform: macos
            runsOn: macos-latest
            zipCommand: 'tar -czf GameListConverter-Macos-Not-Notarized.tar.gz -C composeApp/build/compose/binaries/main-release/app .'
            archiveName: GameListConverter-Macos-Not-Notarized.tar.gz

    runs-on: ${{ matrix.runsOn }}
    needs: getVersion
    steps:
      - uses: actions/checkout@v4
        with:
          # This number needs to be high enough to find previous version tags.
          fetch-depth: 15

      - name: "Set up JDK 17 for ${{ matrix.platform }}"
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'adopt'

      - name: "Build and run tests"
        if: matrix.platform == 'windows'
        run: |
          ./gradlew build
          ./gradlew allTests

      - name: "Build app for ${{ matrix.platform }}"
        if: github.ref == 'refs/heads/main'
        run: |
          ./gradlew createReleaseDistributable
          ${{ matrix.zipCommand }}
